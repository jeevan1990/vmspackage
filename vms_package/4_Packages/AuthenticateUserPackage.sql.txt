create or replace PACKAGE AUTHENTICATE_USER_PKG AS
PROCEDURE AUTHENTICATE_USER(username VARCHAR2,
   password VARCHAR2,
   prsId OUT NUMBER,
   v_statcode  OUT NUMBER,
   v_success_msg OUT  VARCHAR2,
   v_error_msg OUT  VARCHAR2
  );
  
  
END AUTHENTICATE_USER_PKG;

/

create or replace PACKAGE BODY AUTHENTICATE_USER_PKG AS
PROCEDURE AUTHENTICATE_USER(username VARCHAR2,
   password VARCHAR2,
   prsId OUT NUMBER,
   v_statcode  OUT NUMBER,
   v_success_msg OUT  VARCHAR2,
   v_error_msg OUT  VARCHAR2
  )
  
  IS
    v_count NUMBER;
    v_query VARCHAR2(1000);
    v_query2 VARCHAR2(1000);
    v_query3 VARCHAR2(1000);
    username_exception EXCEPTION;
    password_exception EXCEPTION;
  BEGIN
  v_statcode :=0;
  v_query:='select count(*)  from vms_user where userName=:1';
  v_query2:='select count(*)  from vms_user where userName=:1 and password=:2';
  v_query3:='select PERSONID from vms_user where userName=:1 and password=:2';
  
  execute immediate v_query into v_count using trim(username);
  
  if v_count <>1 THEN
    RAISE username_exception;
  END IF;  
  
  v_count :=0;
  
  execute immediate v_query2 into v_count using trim(username),trim(password);
  
  if v_count <>1 THEN
    RAISE password_exception;
  END IF;  
 
 execute immediate v_query3 into prsId using trim(username),trim(password);
 
  v_success_msg:='Matched user with count' ||v_count;
  EXCEPTION
  WHEN username_exception THEN
  v_statcode :=100;
  v_error_msg :='Username not found';
  WHEN password_exception THEN
  v_statcode :=100;
  v_error_msg :='Password not matching';
 WHEN OTHERS THEN
 rollback;
 v_statcode :=100;
 v_error_msg :='ERROR '||SUBSTR(SQLERRM,1,100)||'SQLCODE '||SQLCODE;
  END AUTHENTICATE_USER;

END AUTHENTICATE_USER_PKG;


/


show errors;